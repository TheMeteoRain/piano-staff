on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      prs_created: ${{ steps.release.outputs.prs_created }}
      pr: ${{ steps.release.outputs.pr }}
      prs: ${{ steps.release.outputs.prs }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PROJECT_TOKEN }}
          release-type: node

  update-files:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.prs_created == 'true' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          fetch-depth: 0

      - name: Get version from package.json
        id: get-version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update public/manifest.json
        run: |
          jq --arg version "$VERSION" '.version = $version' public/manifest.json > tmp.json && mv tmp.json public/manifest.json
          cat public/manifest.json

      - name: Update public/version.json
        run: |
          jq --arg version "$VERSION" --arg sha "$GITHUB_SHA" \
            '.version = $version | .sha = $sha' \
            public/version.json > tmp.json && mv tmp.json public/version.json
          cat public/version.json

      - name: Commit and push updated files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/manifest.json
          git add public/version.json
          git commit --amend --no-edit
          git push --force-with-lease
