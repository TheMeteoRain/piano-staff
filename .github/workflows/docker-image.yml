name: Build docker image

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine tag
        id: get-tag
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            TAG="${{ github.ref_name }}"
          else
            git fetch --tags
            TAG=$(git tag -l 'v*.*.*' | sort -V | tail -n 1)
          fi
          echo "Using tag: $TAG"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

  build:
    needs: get-tag
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ./.github/actions/asdf-setup
      - uses: ./.github/actions/pnpm

      - name: pnpm build
        run: pnpm build
        env:
          VITE_FARO_ACTIVE: ${{ vars.FARO_ACTIVE }}
          VITE_FARO_URL: ${{ vars.FARO_URL }}
          VITE_FARO_APP_NAME: ${{ vars.FARO_APP_NAME }}
          VITE_FARO_ENDPOINT: ${{ secrets.FARO_ENDPOINT }}
          VITE_FARO_APP_ID: ${{ secrets.FARO_APP_ID }}
          VITE_FARO_STACK_ID: ${{ secrets.FARO_STACK_ID }}
          VITE_FARO_API_KEY: ${{ secrets.FARO_API_KEY }}

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          if-no-files-found: 'error'

  docker:
    needs: [get-tag, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - name: Confirm dist is present
        run: |
          echo "Contents of working directory:"
          ls -la
          echo "Contents of ./dist:"
          ls -la ./dist
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/themeteorain/piano-staff/frontend:latest
            ghcr.io/themeteorain/piano-staff/frontend:${{ needs.get-tag.outputs.tag }}
